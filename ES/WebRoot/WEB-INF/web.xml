<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  
  <!-- web.xml 的加载顺序是：context-param -> listener -> filter -> servlet ，而同个类型之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的 -->

  
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <servlet-mapping>     
    <servlet-name>default</servlet-name>    
    <url-pattern>*.jpg</url-pattern>       
  </servlet-mapping>      
  <servlet-mapping>         
    <servlet-name>default</servlet-name>      
    <url-pattern>*.js</url-pattern>      
  </servlet-mapping>      
  <servlet-mapping>          
    <servlet-name>default</servlet-name>         
    <url-pattern>*.css</url-pattern>        
  </servlet-mapping>      


  <context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>classpath:/META-INF/jdbc-context.xml</param-value>
	<description>加载数据库连接的环境</description>
  </context-param>  

  <servlet>
  	<servlet-name>springMvc3</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:/META-INF/springMvc3-servlet.xml</param-value>
  		<description>加载spring mvc的环境</description>
  	</init-param>
  	<description>用来定义参数，可有多个init-param。在servlet类中通过getInitParamenter(String name)方法访问初始化参数</description>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
    <!-- 会话超时配置（单位为分钟） -->
  <session-config> 
      <session-timeout>120</session-timeout> 
  </session-config>
  
  <servlet-mapping>
  	<servlet-name>springMvc3</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
    	<!-- 登陆验证 开始,从 shrine_oa 项目copy而来，学习filter 2013.7.12-->

	<filter>
		<filter-name>frameworkFilter</filter-name>
		<filter-class>com.aokunsang.filter.FrameworkFilter</filter-class>
		<init-param>
			<param-name>exception</param-name>
			<param-value>.css,.png,.jpg,.js,.gif,/index.jsp,/out.jsp,login_system.jsp,/login.jsp,/oaUser!checkUser.action</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>frameworkFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 登陆验证 结束 -->
  
  <filter>
  	<filter-name>encodingFilter</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>encodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
   <jsp-config> 
	    <taglib>
	        <taglib-uri>/const-tag</taglib-uri>
	        <taglib-location>/WEB-INF/jstltags/const-tag.tld</taglib-location>
	    </taglib> 
	</jsp-config>
  
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
   <!-- 通过错误码来配置error-page ,配置了当系统发生404错误时，跳转到错误处理页面NotFound.jsp。 -->
   <error-page> 
      <error-code>404</error-code> 
      <location>/NotFound.jsp</location> 
   </error-page> 
   <!--  通过异常的类型配置error-page ,配置了当系统发生java.lang.NullException（即空指针异常）时，跳转到错误处理页面error.jsp  -->
   <error-page> 
       <exception-type>java.lang.NullException</exception-type> 
       <location>/error.jsp</location> 
   </error-page>
  
</web-app>